/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OutlierCorrectionDialog.java
 *
 * Created on Nov 1, 2010, 8:56:44 PM
 */

package org.glotaran.core.main.common;

import java.awt.Component;
import java.awt.Container;
import javax.swing.JPanel;
import org.glotaran.core.messages.CoreErrorMessages;

/**
 *
 * @author Sergey
 */
public class OutlierCorrectionDialog extends javax.swing.JPanel {

    private final OutlierCorrectionParameters outlierParameters;
    /** Creates new form OutlierCorrectionDialog */
    public OutlierCorrectionDialog() {
        initComponents();
        outlierParameters = new OutlierCorrectionParameters();
        enableDisableControls();
    }

    public OutlierCorrectionDialog(int maxWindowSize) {
        initComponents();
        outlierParameters = new OutlierCorrectionParameters();
        jSWindSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(3), Integer.valueOf(maxWindowSize), Integer.valueOf(1)));
        enableDisableControls();
    }

    /**
     * This method is called from within the constructor to     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPReplaceIndividualOutliers = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSWindSize = new javax.swing.JSpinner();
        jTFFence = new javax.swing.JTextField();
        jPSetRegionToConstantValue = new javax.swing.JPanel();
        jPdim1 = new javax.swing.JPanel();
        jLdim1From = new javax.swing.JLabel();
        jLdim1To = new javax.swing.JLabel();
        jTFdim1From = new javax.swing.JTextField();
        jTFdim1To = new javax.swing.JTextField();
        jPdim2 = new javax.swing.JPanel();
        jLdim2From = new javax.swing.JLabel();
        jLdim2To = new javax.swing.JLabel();
        jTFdim2From = new javax.swing.JTextField();
        jTFdim2To = new javax.swing.JTextField();
        jPreplacementValue = new javax.swing.JPanel();
        jLConstValue = new javax.swing.JLabel();
        jTFconstRepVal = new javax.swing.JTextField();
        jRBReplaceIndividualOutliers = new javax.swing.JRadioButton();
        jRBSetRegionToConstantValue = new javax.swing.JRadioButton();

        setMinimumSize(new java.awt.Dimension(200, 300));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLabel2.text")); // NOI18N

        jSWindSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(3), null, Integer.valueOf(1)));
        jSWindSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSWindSizeStateChanged(evt);
            }
        });

        jTFFence.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTFFence.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFFence.text")); // NOI18N
        jTFFence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFFenceKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPReplaceIndividualOutliersLayout = new javax.swing.GroupLayout(jPReplaceIndividualOutliers);
        jPReplaceIndividualOutliers.setLayout(jPReplaceIndividualOutliersLayout);
        jPReplaceIndividualOutliersLayout.setHorizontalGroup(
            jPReplaceIndividualOutliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReplaceIndividualOutliersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPReplaceIndividualOutliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPReplaceIndividualOutliersLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTFFence, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPReplaceIndividualOutliersLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSWindSize, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPReplaceIndividualOutliersLayout.setVerticalGroup(
            jPReplaceIndividualOutliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReplaceIndividualOutliersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPReplaceIndividualOutliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jSWindSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPReplaceIndividualOutliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFFence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(jPReplaceIndividualOutliers, gridBagConstraints);

        jPSetRegionToConstantValue.setLayout(new java.awt.GridBagLayout());

        jPdim1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jPdim1.border.title"))); // NOI18N

        jLdim1From.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLdim1From.text")); // NOI18N

        jLdim1To.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLdim1To.text")); // NOI18N

        jTFdim1From.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFdim1From.text")); // NOI18N
        jTFdim1From.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFdim1FromKeyReleased(evt);
            }
        });

        jTFdim1To.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFdim1To.text")); // NOI18N
        jTFdim1To.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFdim1ToKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPdim1Layout = new javax.swing.GroupLayout(jPdim1);
        jPdim1.setLayout(jPdim1Layout);
        jPdim1Layout.setHorizontalGroup(
            jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdim1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLdim1To)
                    .addComponent(jLdim1From))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFdim1From, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jTFdim1To))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPdim1Layout.setVerticalGroup(
            jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdim1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdim1From)
                    .addComponent(jTFdim1From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPdim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdim1To)
                    .addComponent(jTFdim1To, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.5;
        jPSetRegionToConstantValue.add(jPdim1, gridBagConstraints);

        jPdim2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jPdim2.border.title"))); // NOI18N

        jLdim2From.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLdim2From.text")); // NOI18N

        jLdim2To.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLdim2To.text")); // NOI18N

        jTFdim2From.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFdim2From.text")); // NOI18N
        jTFdim2From.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFdim2FromKeyReleased(evt);
            }
        });

        jTFdim2To.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFdim2To.text")); // NOI18N
        jTFdim2To.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFdim2ToKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPdim2Layout = new javax.swing.GroupLayout(jPdim2);
        jPdim2.setLayout(jPdim2Layout);
        jPdim2Layout.setHorizontalGroup(
            jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdim2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLdim2From)
                    .addComponent(jLdim2To))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFdim2From, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jTFdim2To))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPdim2Layout.setVerticalGroup(
            jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdim2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdim2From)
                    .addComponent(jTFdim2From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPdim2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdim2To)
                    .addComponent(jTFdim2To, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.5;
        jPSetRegionToConstantValue.add(jPdim2, gridBagConstraints);

        jPreplacementValue.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jPreplacementValue.border.title"))); // NOI18N

        jLConstValue.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jLConstValue.text")); // NOI18N

        jTFconstRepVal.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jTFconstRepVal.text")); // NOI18N
        jTFconstRepVal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFconstRepValKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPreplacementValueLayout = new javax.swing.GroupLayout(jPreplacementValue);
        jPreplacementValue.setLayout(jPreplacementValueLayout);
        jPreplacementValueLayout.setHorizontalGroup(
            jPreplacementValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPreplacementValueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLConstValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFconstRepVal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPreplacementValueLayout.setVerticalGroup(
            jPreplacementValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPreplacementValueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPreplacementValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLConstValue)
                    .addComponent(jTFconstRepVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPSetRegionToConstantValue.add(jPreplacementValue, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(jPSetRegionToConstantValue, gridBagConstraints);

        buttonGroup1.add(jRBReplaceIndividualOutliers);
        jRBReplaceIndividualOutliers.setSelected(true);
        jRBReplaceIndividualOutliers.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jRBReplaceIndividualOutliers.text")); // NOI18N
        jRBReplaceIndividualOutliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBReplaceIndividualOutliersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jRBReplaceIndividualOutliers, gridBagConstraints);

        buttonGroup1.add(jRBSetRegionToConstantValue);
        jRBSetRegionToConstantValue.setText(org.openide.util.NbBundle.getMessage(OutlierCorrectionDialog.class, "OutlierCorrectionDialog.jRBSetRegionToConstantValue.text")); // NOI18N
        jRBSetRegionToConstantValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBSetRegionToConstantValueActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        add(jRBSetRegionToConstantValue, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTFFenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFFenceKeyReleased
       try {
            outlierParameters.setFence(Integer.parseInt(jTFFence.getText()));
        } catch (Exception e) {
            CoreErrorMessages.numberFormatException();
        }
    }//GEN-LAST:event_jTFFenceKeyReleased

    public OutlierCorrectionParameters getOutlierParameters() {
        return outlierParameters;
    }

    private void jRBReplaceIndividualOutliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBReplaceIndividualOutliersActionPerformed
        enableDisableControls();
    }//GEN-LAST:event_jRBReplaceIndividualOutliersActionPerformed

    private void jRBSetRegionToConstantValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBSetRegionToConstantValueActionPerformed
        enableDisableControls();
    }//GEN-LAST:event_jRBSetRegionToConstantValueActionPerformed

    private void jTFdim1FromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdim1FromKeyReleased
        // TODO add your handling code here:
       if (checkDouble(jTFdim1From.getText())){
            outlierParameters.setOcRegConstD1(0, Double.parseDouble(jTFdim1From.getText()));
       }
    }//GEN-LAST:event_jTFdim1FromKeyReleased

    private void jTFdim1ToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdim1ToKeyReleased
        // TODO add your handling code here:
         if (checkDouble(jTFdim1To.getText())){
            outlierParameters.setOcRegConstD1(1, Double.parseDouble(jTFdim1To.getText()));
       }
    }//GEN-LAST:event_jTFdim1ToKeyReleased

    private void jTFdim2FromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdim2FromKeyReleased
        // TODO add your handling code here:
         if (checkDouble(jTFdim2From.getText())){
            outlierParameters.setOcRegConstD2(0, Double.parseDouble(jTFdim2From.getText()));
       }
    }//GEN-LAST:event_jTFdim2FromKeyReleased

    private void jTFdim2ToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdim2ToKeyReleased
        // TODO add your handling code here:
         if (checkDouble(jTFdim2To.getText())){
            outlierParameters.setOcRegConstD2(1, Double.parseDouble(jTFdim2To.getText()));
       }
    }//GEN-LAST:event_jTFdim2ToKeyReleased

    private void jTFconstRepValKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFconstRepValKeyReleased
        // TODO add your handling code here:
          if (checkDouble(jTFconstRepVal.getText())){
            outlierParameters.setOcConstValue(Double.parseDouble(jTFconstRepVal.getText()));
        }
    }//GEN-LAST:event_jTFconstRepValKeyReleased

    private void jSWindSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSWindSizeStateChanged
        // TODO add your handling code here:
        outlierParameters.setWindowSize((Integer)jSWindSize.getValue());
    }//GEN-LAST:event_jSWindSizeStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLConstValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLdim1From;
    private javax.swing.JLabel jLdim1To;
    private javax.swing.JLabel jLdim2From;
    private javax.swing.JLabel jLdim2To;
    private javax.swing.JPanel jPReplaceIndividualOutliers;
    private javax.swing.JPanel jPSetRegionToConstantValue;
    private javax.swing.JPanel jPdim1;
    private javax.swing.JPanel jPdim2;
    private javax.swing.JPanel jPreplacementValue;
    private javax.swing.JRadioButton jRBReplaceIndividualOutliers;
    private javax.swing.JRadioButton jRBSetRegionToConstantValue;
    private javax.swing.JSpinner jSWindSize;
    private javax.swing.JTextField jTFFence;
    private javax.swing.JTextField jTFconstRepVal;
    private javax.swing.JTextField jTFdim1From;
    private javax.swing.JTextField jTFdim1To;
    private javax.swing.JTextField jTFdim2From;
    private javax.swing.JTextField jTFdim2To;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setEnabled(boolean enabled) {
        if (enabled) {
            jRBReplaceIndividualOutliers.setEnabled(enabled);
            jRBSetRegionToConstantValue.setEnabled(enabled);
            enableDisableControls();
        } else {
         for (int i = 0; i < getComponentCount(); i++) {
             getComponent(i).setEnabled(enabled);
            }
        }
    }

    private void enableDisableControls() {
        setEnabledRecursively(jPReplaceIndividualOutliers, jRBReplaceIndividualOutliers.isSelected());
        setEnabledRecursively(jPSetRegionToConstantValue, jRBSetRegionToConstantValue.isSelected());        
        outlierParameters.setIndividualOutlierC(jRBReplaceIndividualOutliers.isSelected());
        outlierParameters.setRegionValueC(jRBSetRegionToConstantValue.isSelected());
    }

    void setEnabledRecursively(Component component, boolean enabled) {
        component.setEnabled(enabled);
        if (component instanceof Container) {
            for (Component child : ((Container) component).getComponents()) {
                setEnabledRecursively(child, enabled);
            }
        }
    }

    private boolean checkDouble(String number) {
        try {
            Double.parseDouble(number);
            return true;
        } catch (Exception e) {
            CoreErrorMessages.numberFormatException();
            return false;
        }
    }
}
